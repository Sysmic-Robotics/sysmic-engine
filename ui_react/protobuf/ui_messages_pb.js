// source: ui_messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.UIMessages.Command', null, global);
goog.exportSymbol('proto.UIMessages.Command.CommandType', null, global);
goog.exportSymbol('proto.UIMessages.Command.Position', null, global);
goog.exportSymbol('proto.UIMessages.EnginePackage', null, global);
goog.exportSymbol('proto.UIMessages.EnginePackage.AIEnvironment', null, global);
goog.exportSymbol('proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination', null, global);
goog.exportSymbol('proto.UIMessages.EnginePackage.Scene', null, global);
goog.exportSymbol('proto.UIMessages.EnginePackage.Scene.Ball', null, global);
goog.exportSymbol('proto.UIMessages.EnginePackage.Scene.Robot', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.EnginePackage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UIMessages.EnginePackage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.EnginePackage.displayName = 'proto.UIMessages.EnginePackage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.EnginePackage.Scene = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.UIMessages.EnginePackage.Scene.repeatedFields_, null);
};
goog.inherits(proto.UIMessages.EnginePackage.Scene, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.EnginePackage.Scene.displayName = 'proto.UIMessages.EnginePackage.Scene';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.EnginePackage.Scene.Ball = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UIMessages.EnginePackage.Scene.Ball, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.EnginePackage.Scene.Ball.displayName = 'proto.UIMessages.EnginePackage.Scene.Ball';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.EnginePackage.Scene.Robot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UIMessages.EnginePackage.Scene.Robot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.EnginePackage.Scene.Robot.displayName = 'proto.UIMessages.EnginePackage.Scene.Robot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.EnginePackage.AIEnvironment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.UIMessages.EnginePackage.AIEnvironment.repeatedFields_, null);
};
goog.inherits(proto.UIMessages.EnginePackage.AIEnvironment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.EnginePackage.AIEnvironment.displayName = 'proto.UIMessages.EnginePackage.AIEnvironment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.displayName = 'proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.Command = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.UIMessages.Command.repeatedFields_, null);
};
goog.inherits(proto.UIMessages.Command, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.Command.displayName = 'proto.UIMessages.Command';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UIMessages.Command.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UIMessages.Command.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UIMessages.Command.Position.displayName = 'proto.UIMessages.Command.Position';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.EnginePackage.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.EnginePackage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.EnginePackage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.toObject = function(includeInstance, msg) {
  var f, obj = {
    scene: (f = msg.getScene()) && proto.UIMessages.EnginePackage.Scene.toObject(includeInstance, f),
    aiEnvironment: (f = msg.getAiEnvironment()) && proto.UIMessages.EnginePackage.AIEnvironment.toObject(includeInstance, f),
    fps: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.EnginePackage}
 */
proto.UIMessages.EnginePackage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.EnginePackage;
  return proto.UIMessages.EnginePackage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.EnginePackage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.EnginePackage}
 */
proto.UIMessages.EnginePackage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.UIMessages.EnginePackage.Scene;
      reader.readMessage(value,proto.UIMessages.EnginePackage.Scene.deserializeBinaryFromReader);
      msg.setScene(value);
      break;
    case 2:
      var value = new proto.UIMessages.EnginePackage.AIEnvironment;
      reader.readMessage(value,proto.UIMessages.EnginePackage.AIEnvironment.deserializeBinaryFromReader);
      msg.setAiEnvironment(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.EnginePackage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.EnginePackage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.EnginePackage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScene();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.UIMessages.EnginePackage.Scene.serializeBinaryToWriter
    );
  }
  f = message.getAiEnvironment();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.UIMessages.EnginePackage.AIEnvironment.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.UIMessages.EnginePackage.Scene.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.EnginePackage.Scene.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.EnginePackage.Scene.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.EnginePackage.Scene} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.Scene.toObject = function(includeInstance, msg) {
  var f, obj = {
    ball: (f = msg.getBall()) && proto.UIMessages.EnginePackage.Scene.Ball.toObject(includeInstance, f),
    yellowRobotsList: jspb.Message.toObjectList(msg.getYellowRobotsList(),
    proto.UIMessages.EnginePackage.Scene.Robot.toObject, includeInstance),
    blueRobotsList: jspb.Message.toObjectList(msg.getBlueRobotsList(),
    proto.UIMessages.EnginePackage.Scene.Robot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.EnginePackage.Scene}
 */
proto.UIMessages.EnginePackage.Scene.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.EnginePackage.Scene;
  return proto.UIMessages.EnginePackage.Scene.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.EnginePackage.Scene} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.EnginePackage.Scene}
 */
proto.UIMessages.EnginePackage.Scene.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.UIMessages.EnginePackage.Scene.Ball;
      reader.readMessage(value,proto.UIMessages.EnginePackage.Scene.Ball.deserializeBinaryFromReader);
      msg.setBall(value);
      break;
    case 2:
      var value = new proto.UIMessages.EnginePackage.Scene.Robot;
      reader.readMessage(value,proto.UIMessages.EnginePackage.Scene.Robot.deserializeBinaryFromReader);
      msg.addYellowRobots(value);
      break;
    case 3:
      var value = new proto.UIMessages.EnginePackage.Scene.Robot;
      reader.readMessage(value,proto.UIMessages.EnginePackage.Scene.Robot.deserializeBinaryFromReader);
      msg.addBlueRobots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.EnginePackage.Scene.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.EnginePackage.Scene.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.EnginePackage.Scene} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.Scene.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.UIMessages.EnginePackage.Scene.Ball.serializeBinaryToWriter
    );
  }
  f = message.getYellowRobotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.UIMessages.EnginePackage.Scene.Robot.serializeBinaryToWriter
    );
  }
  f = message.getBlueRobotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.UIMessages.EnginePackage.Scene.Robot.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.EnginePackage.Scene.Ball.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.EnginePackage.Scene.Ball} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.Scene.Ball.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    y: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    z: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball}
 */
proto.UIMessages.EnginePackage.Scene.Ball.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.EnginePackage.Scene.Ball;
  return proto.UIMessages.EnginePackage.Scene.Ball.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.EnginePackage.Scene.Ball} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball}
 */
proto.UIMessages.EnginePackage.Scene.Ball.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.EnginePackage.Scene.Ball.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.EnginePackage.Scene.Ball} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.Scene.Ball.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * required float x = 1;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball} returns this
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.setX = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball} returns this
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.clearX = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required float y = 2;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball} returns this
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.setY = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball} returns this
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.clearY = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required float z = 3;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball} returns this
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.setZ = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball} returns this
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.clearZ = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Ball.prototype.hasZ = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.EnginePackage.Scene.Robot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.EnginePackage.Scene.Robot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.Scene.Robot.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    x: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    y: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    orientation: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    velX: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    velY: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot}
 */
proto.UIMessages.EnginePackage.Scene.Robot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.EnginePackage.Scene.Robot;
  return proto.UIMessages.EnginePackage.Scene.Robot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.EnginePackage.Scene.Robot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot}
 */
proto.UIMessages.EnginePackage.Scene.Robot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVelX(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVelY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.EnginePackage.Scene.Robot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.EnginePackage.Scene.Robot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.Scene.Robot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * required uint32 id = 1;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required float x = 2;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.setX = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.clearX = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.hasX = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required float y = 3;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.setY = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.clearY = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.hasY = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required float orientation = 4;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.setOrientation = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.clearOrientation = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.hasOrientation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float vel_x = 5;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.getVelX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.setVelX = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.clearVelX = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.hasVelX = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float vel_y = 6;
 * @return {number}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.getVelY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.setVelY = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot} returns this
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.clearVelY = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.Robot.prototype.hasVelY = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required Ball ball = 1;
 * @return {!proto.UIMessages.EnginePackage.Scene.Ball}
 */
proto.UIMessages.EnginePackage.Scene.prototype.getBall = function() {
  return /** @type{!proto.UIMessages.EnginePackage.Scene.Ball} */ (
    jspb.Message.getWrapperField(this, proto.UIMessages.EnginePackage.Scene.Ball, 1, 1));
};


/**
 * @param {!proto.UIMessages.EnginePackage.Scene.Ball} value
 * @return {!proto.UIMessages.EnginePackage.Scene} returns this
*/
proto.UIMessages.EnginePackage.Scene.prototype.setBall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.Scene} returns this
 */
proto.UIMessages.EnginePackage.Scene.prototype.clearBall = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.Scene.prototype.hasBall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Robot yellow_robots = 2;
 * @return {!Array<!proto.UIMessages.EnginePackage.Scene.Robot>}
 */
proto.UIMessages.EnginePackage.Scene.prototype.getYellowRobotsList = function() {
  return /** @type{!Array<!proto.UIMessages.EnginePackage.Scene.Robot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.UIMessages.EnginePackage.Scene.Robot, 2));
};


/**
 * @param {!Array<!proto.UIMessages.EnginePackage.Scene.Robot>} value
 * @return {!proto.UIMessages.EnginePackage.Scene} returns this
*/
proto.UIMessages.EnginePackage.Scene.prototype.setYellowRobotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.UIMessages.EnginePackage.Scene.Robot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot}
 */
proto.UIMessages.EnginePackage.Scene.prototype.addYellowRobots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.UIMessages.EnginePackage.Scene.Robot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UIMessages.EnginePackage.Scene} returns this
 */
proto.UIMessages.EnginePackage.Scene.prototype.clearYellowRobotsList = function() {
  return this.setYellowRobotsList([]);
};


/**
 * repeated Robot blue_robots = 3;
 * @return {!Array<!proto.UIMessages.EnginePackage.Scene.Robot>}
 */
proto.UIMessages.EnginePackage.Scene.prototype.getBlueRobotsList = function() {
  return /** @type{!Array<!proto.UIMessages.EnginePackage.Scene.Robot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.UIMessages.EnginePackage.Scene.Robot, 3));
};


/**
 * @param {!Array<!proto.UIMessages.EnginePackage.Scene.Robot>} value
 * @return {!proto.UIMessages.EnginePackage.Scene} returns this
*/
proto.UIMessages.EnginePackage.Scene.prototype.setBlueRobotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.UIMessages.EnginePackage.Scene.Robot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.UIMessages.EnginePackage.Scene.Robot}
 */
proto.UIMessages.EnginePackage.Scene.prototype.addBlueRobots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.UIMessages.EnginePackage.Scene.Robot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UIMessages.EnginePackage.Scene} returns this
 */
proto.UIMessages.EnginePackage.Scene.prototype.clearBlueRobotsList = function() {
  return this.setBlueRobotsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.UIMessages.EnginePackage.AIEnvironment.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.EnginePackage.AIEnvironment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.AIEnvironment.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    robotDestinationsList: jspb.Message.toObjectList(msg.getRobotDestinationsList(),
    proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment}
 */
proto.UIMessages.EnginePackage.AIEnvironment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.EnginePackage.AIEnvironment;
  return proto.UIMessages.EnginePackage.AIEnvironment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment}
 */
proto.UIMessages.EnginePackage.AIEnvironment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination;
      reader.readMessage(value,proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.deserializeBinaryFromReader);
      msg.addRobotDestinations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.EnginePackage.AIEnvironment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.AIEnvironment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRobotDestinationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    x: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    y: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination;
  return proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * required uint32 id = 1;
 * @return {number}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required float x = 2;
 * @return {number}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.setX = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.clearX = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.hasX = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required float y = 3;
 * @return {number}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.setY = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.clearY = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination.prototype.hasY = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated RobotDestination robot_destinations = 2;
 * @return {!Array<!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination>}
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.getRobotDestinationsList = function() {
  return /** @type{!Array<!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination, 2));
};


/**
 * @param {!Array<!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination>} value
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment} returns this
*/
proto.UIMessages.EnginePackage.AIEnvironment.prototype.setRobotDestinationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination=} opt_value
 * @param {number=} opt_index
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination}
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.addRobotDestinations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.UIMessages.EnginePackage.AIEnvironment.RobotDestination, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment} returns this
 */
proto.UIMessages.EnginePackage.AIEnvironment.prototype.clearRobotDestinationsList = function() {
  return this.setRobotDestinationsList([]);
};


/**
 * required Scene scene = 1;
 * @return {!proto.UIMessages.EnginePackage.Scene}
 */
proto.UIMessages.EnginePackage.prototype.getScene = function() {
  return /** @type{!proto.UIMessages.EnginePackage.Scene} */ (
    jspb.Message.getWrapperField(this, proto.UIMessages.EnginePackage.Scene, 1, 1));
};


/**
 * @param {!proto.UIMessages.EnginePackage.Scene} value
 * @return {!proto.UIMessages.EnginePackage} returns this
*/
proto.UIMessages.EnginePackage.prototype.setScene = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage} returns this
 */
proto.UIMessages.EnginePackage.prototype.clearScene = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.prototype.hasScene = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required AIEnvironment ai_environment = 2;
 * @return {!proto.UIMessages.EnginePackage.AIEnvironment}
 */
proto.UIMessages.EnginePackage.prototype.getAiEnvironment = function() {
  return /** @type{!proto.UIMessages.EnginePackage.AIEnvironment} */ (
    jspb.Message.getWrapperField(this, proto.UIMessages.EnginePackage.AIEnvironment, 2, 1));
};


/**
 * @param {!proto.UIMessages.EnginePackage.AIEnvironment} value
 * @return {!proto.UIMessages.EnginePackage} returns this
*/
proto.UIMessages.EnginePackage.prototype.setAiEnvironment = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage} returns this
 */
proto.UIMessages.EnginePackage.prototype.clearAiEnvironment = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.prototype.hasAiEnvironment = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required uint32 fps = 3;
 * @return {number}
 */
proto.UIMessages.EnginePackage.prototype.getFps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.EnginePackage} returns this
 */
proto.UIMessages.EnginePackage.prototype.setFps = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.EnginePackage} returns this
 */
proto.UIMessages.EnginePackage.prototype.clearFps = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.EnginePackage.prototype.hasFps = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.UIMessages.Command.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.Command.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.Command.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.Command} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.Command.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    robotIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    destination: (f = msg.getDestination()) && proto.UIMessages.Command.Position.toObject(includeInstance, f),
    aiEnvironment: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.Command}
 */
proto.UIMessages.Command.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.Command;
  return proto.UIMessages.Command.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.Command} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.Command}
 */
proto.UIMessages.Command.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.UIMessages.Command.CommandType} */ (reader.readEnum());
      msg.setCommandType(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRobotIds(values[i]);
      }
      break;
    case 4:
      var value = new proto.UIMessages.Command.Position;
      reader.readMessage(value,proto.UIMessages.Command.Position.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAiEnvironment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.Command.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.Command.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.Command} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.Command.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.UIMessages.Command.CommandType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRobotIdsList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      2,
      f
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.UIMessages.Command.Position.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.UIMessages.Command.CommandType = {
  START_MOVE_TO: 0,
  CHANGE_AI_ENVIRONMENT: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UIMessages.Command.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.UIMessages.Command.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UIMessages.Command.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.Command.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    y: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UIMessages.Command.Position}
 */
proto.UIMessages.Command.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UIMessages.Command.Position;
  return proto.UIMessages.Command.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UIMessages.Command.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UIMessages.Command.Position}
 */
proto.UIMessages.Command.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UIMessages.Command.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UIMessages.Command.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UIMessages.Command.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UIMessages.Command.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * required float x = 1;
 * @return {number}
 */
proto.UIMessages.Command.Position.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.Command.Position} returns this
 */
proto.UIMessages.Command.Position.prototype.setX = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.Command.Position} returns this
 */
proto.UIMessages.Command.Position.prototype.clearX = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.Command.Position.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required float y = 2;
 * @return {number}
 */
proto.UIMessages.Command.Position.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.UIMessages.Command.Position} returns this
 */
proto.UIMessages.Command.Position.prototype.setY = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.Command.Position} returns this
 */
proto.UIMessages.Command.Position.prototype.clearY = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.Command.Position.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required CommandType command_type = 1;
 * @return {!proto.UIMessages.Command.CommandType}
 */
proto.UIMessages.Command.prototype.getCommandType = function() {
  return /** @type {!proto.UIMessages.Command.CommandType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.UIMessages.Command.CommandType} value
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.setCommandType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.clearCommandType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.Command.prototype.hasCommandType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint32 robot_ids = 2;
 * @return {!Array<number>}
 */
proto.UIMessages.Command.prototype.getRobotIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.setRobotIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.addRobotIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.clearRobotIdsList = function() {
  return this.setRobotIdsList([]);
};


/**
 * optional Position destination = 4;
 * @return {?proto.UIMessages.Command.Position}
 */
proto.UIMessages.Command.prototype.getDestination = function() {
  return /** @type{?proto.UIMessages.Command.Position} */ (
    jspb.Message.getWrapperField(this, proto.UIMessages.Command.Position, 4));
};


/**
 * @param {?proto.UIMessages.Command.Position|undefined} value
 * @return {!proto.UIMessages.Command} returns this
*/
proto.UIMessages.Command.prototype.setDestination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.clearDestination = function() {
  return this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.Command.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ai_environment = 5;
 * @return {string}
 */
proto.UIMessages.Command.prototype.getAiEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.setAiEnvironment = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UIMessages.Command} returns this
 */
proto.UIMessages.Command.prototype.clearAiEnvironment = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UIMessages.Command.prototype.hasAiEnvironment = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.UIMessages);
